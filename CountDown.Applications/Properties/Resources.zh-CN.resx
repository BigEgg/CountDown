<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMessage" xml:space="preserve">
    <value>做给我妈用来偷菜的。。。\nO(∩_∩)O~</value>
  </data>
  <data name="AlertAtTimeName" xml:space="preserve">
    <value>定点闹钟</value>
  </data>
  <data name="AlertTimeMandatory" xml:space="preserve">
    <value>预报时间是必须的。</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>小闹钟（Beta）</value>
  </data>
  <data name="BeforeAlertMinutesMandatory" xml:space="preserve">
    <value>提前报时时间是必须的。</value>
  </data>
  <data name="BeforeAlertMinutesRange" xml:space="preserve">
    <value>预报提前分钟数只能在{1}到{2}分钟以内。</value>
  </data>
  <data name="CountDownAlertName" xml:space="preserve">
    <value>倒计时闹钟</value>
  </data>
  <data name="DaysMandatory" xml:space="preserve">
    <value>倒计时天数是必须的。</value>
  </data>
  <data name="DaysRange" xml:space="preserve">
    <value>倒计时天数只能在{1}到{2}天以内。</value>
  </data>
  <data name="ExpiredMinutesMandatory" xml:space="preserve">
    <value>预报过期分钟数师必须的。</value>
  </data>
  <data name="ExpiredMinutesRange" xml:space="preserve">
    <value>预报过期分钟数只能在{1}到{2}分钟以内。</value>
  </data>
  <data name="HoursMandatory" xml:space="preserve">
    <value>倒计时小时数是必须的。</value>
  </data>
  <data name="HoursRange" xml:space="preserve">
    <value>倒计时小时数只能在{1}到{2}小时以内。</value>
  </data>
  <data name="MinutesMandatory" xml:space="preserve">
    <value>倒计时分钟数是必须的。</value>
  </data>
  <data name="MinutesRange" xml:space="preserve">
    <value>倒计时分钟数只能在{1}到{2}分钟以内。</value>
  </data>
  <data name="NoticeBranchMandatory" xml:space="preserve">
    <value>预报类型是必须的。</value>
  </data>
  <data name="NoticeFormat" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
  <data name="NoticeMandatory" xml:space="preserve">
    <value>预报内容是必须的。</value>
  </data>
  <data name="OnlyNoticeBranch" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="RestartApplication" xml:space="preserve">
    <value>要试新的配置生效，需要重新程序。</value>
  </data>
  <data name="SaveError" xml:space="preserve">
    <value>在保存数据的时候出错啦，%&gt;_&lt;%。。。\n请联系我如果这个对话框出现了。O(∩_∩)O~\n错误消息是： {0}</value>
  </data>
  <data name="SettingError" xml:space="preserve">
    <value>一个或多个设置有问题。</value>
  </data>
  <data name="SoundPathError" xml:space="preserve">
    <value>声音文件路径只能为绝对或相对地址。</value>
  </data>
  <data name="SoundPathMandatory" xml:space="preserve">
    <value>声音文件路径是必须的。</value>
  </data>
  <data name="TimeMandatory" xml:space="preserve">
    <value>时间是必须的。</value>
  </data>
</root>